name: Auto Build function (Use for call only)

on:
  workflow_call:
    inputs:
      arch:
        type: string
      gapps:
        type: string
      root:
        type: string
      release_type:
        type: string

jobs:
  build:
    name: Build WSA
    runs-on: ubuntu-latest
    steps:
      - name: Checkout ♻️
        uses: actions/checkout@v4

      - name: Setup Python 🏭
        uses: actions/setup-python@v5
        with:
          check-latest: true
          python-version: '3.10'
          cache: 'pip'
          cache-dependency-path: scripts/

      - name: Setup Python3 Virtual Enviroment 🐍
        working-directory: scripts
        run: |
          sudo apt-get update
          PYTHON_VENV_DIR="$(dirname "$PWD")/python3-env"
          python3 -m venv "$PYTHON_VENV_DIR"
          source "$PYTHON_VENV_DIR/bin/activate"
          python3 -m pip install --upgrade -r requirements.txt
          deactivate

      - name: Install Ubuntu Dependencies 🧑‍🏭
        uses: awalsh128/cache-apt-pkgs-action@v1
        with:
          packages: e2fsprogs attr unzip qemu-utils python3-venv p7zip-full
          version: 1.0

      - name: Debug check scripts folder 🔎
        run: |
          ls -l ./scripts
          chmod +x ./scripts/*.sh || true

      - name: Build WSA ${{ inputs.arch }} with GApps ${{ inputs.root }} 🏗️
        id: wsa
        run: |
          if [[ "${{ inputs.release_type }}" == "WIF" ]]; then
              RLS_TYPE="latest"
          else
              RLS_TYPE="retail"
          fi

          if [[ "${{ inputs.gapps }}" == "MindTheGapps" ]]; then
              WITH_GAPPS="--install-gapps"
          else
              WITH_GAPPS=""
          fi

          mkdir -p download

          if [[ "${{ inputs.root }}" == *magisk* ]]; then
              bash ./scripts/build_with_lspinit.sh --arch ${{ inputs.arch }} --release-type $RLS_TYPE --magisk-branch topjohnwu --magisk-ver stable $WITH_GAPPS --root-sol ${{ inputs.root }} --remove-amazon --compress-format 7z
          else
              bash ./scripts/build_with_mount.sh --arch ${{ inputs.arch }} --release-type $RLS_TYPE --magisk-branch topjohnwu --magisk-ver stable $WITH_GAPPS --root-sol ${{ inputs.root }} --remove-amazon --compress-format 7z
          fi
  
      - name: Pass to Windows 💸
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.wsa.outputs.artifact }}-${{ steps.wsa.outputs.built }}
          path: output

      - name: Prepare release tag 🏷️
        id: date
        run: |
           if [[ "${{ inputs.release_type }}" == "WIF" ]]; then
              echo "date=WSA-Insider-Version" >> $GITHUB_OUTPUT
           else
              echo "date=$(date +'v%Y-%m-%d')" >> $GITHUB_OUTPUT
           fi

    outputs:
      zipname: ${{ steps.wsa.outputs.artifact }}
      date: ${{ steps.date.outputs.date }}
      built: ${{ steps.wsa.outputs.built }}
